# It is safe to store the sealed secret in the git repository as it can be decrypted only by the cluster where it was created.
# Secrets can be sealed offline using the kubeseal CLI. To do so I created the SealedSecret with the predefined tls certificate.
# Secret with Amazon DocumentDB Certificate Authority (CA) certificate required to authenticate.
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: docdb-ca-secret
  namepsace: prod
spec:
  encryptedData: AQCBfOt8yed4FFdkA8cwGomKjNQZ(...)
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
      creationTimestamp: null
      name: docdb-ca-secret
      namespace: prod

---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: docdb-ca-secret
  namepsace: dev
spec:
  encryptedData:
    global-bundle.pem: AQCBfOt8yed4FFdkA8cwGomKjNQZ(...)
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
      creationTimestamp: null
      name: docdb-ca-secret
      namespace: dev

---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: docdb-ca-secret
  namepsace: stage
spec:
  encryptedData: AQCBfOt8yed4FFdkA8cwGomKjNQZ(...) # Cutted for visibility
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
      creationTimestamp: null
      name: docdb-ca-secret
      namespace: stage

